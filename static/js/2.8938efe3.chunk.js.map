{"version":3,"file":"static/js/2.8938efe3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"error\":\"ContactForm_error__C1smZ\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { addContacts } from 'redux/operations';\n\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [contact, setContact] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setContact({\n      ...contact,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContacts(contact));\n    setContact({\n      name: '',\n      phone: '',\n    });\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n      <input className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        value={contact.name}\n        onChange={handleChange}\n      />\n      </label>\n      <label className={styles.label}>\n        Number\n      <input className={styles.input}\n        type=\"text\"\n        name=\"phone\"\n        placeholder=\"Phone\"\n        value={contact.phone}\n        onChange={handleChange}\n      />\n      </label>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import styles from './ContactForm.module.css';\n// import { addContacts } from 'redux/operations';\n// import { getContacts } from 'redux/selectors';\n\n// function ContactForm() {\n//   const dispatch = useDispatch();\n//   const allContacts = useSelector(getContacts);\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     if (!name || !number) {\n//       setError('Please fill in both name and number.');\n//       return;\n//     }\n\n//     const isContactExists = allContacts.some(\n//       (contact) => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number\n//     );\n\n//     if (isContactExists) {\n//       setError('This contact already exists.');\n\n//       return;\n//     }\n//     try {\n//       await dispatch(addContacts({ name, number }));\n//       setName('');\n//       setNumber('');\n//       setError('');\n//     } catch (error) {\n//       setError('An error occurred while adding the contact.');\n//     }\n//   };\n\n//   return (\n//     <form className={styles.form} onSubmit={handleSubmit}>\n//       <label className={styles.label}>\n//         Name\n//         <input\n//           className={styles.input}\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//       </label>\n//       <label className={styles.label}>\n//         Number\n//         <input\n//           className={styles.input}\n//           type=\"tel\"\n//           value={number}\n//           onChange={(e) => setNumber(e.target.value)}\n//           pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n//       </label>\n//       <button  className={styles.button} type=\"submit\">Add contact</button>\n//       {error && <p className={styles.error}>{error}</p>}\n//     </form>\n//   );\n// }\n\n// export default ContactForm;\n\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createAction, createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectFilter = (state) => state.filter;\n\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\nexport const selectUser = (state) => state.auth.user;\nexport const selectUserEmail = createSelector(\n  [selectUser],\n  (user) => user.email\n);\n\n\nconst logoutUserAction = createAction('auth/logout');\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(logoutUserAction());\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"li\":\"ContactList_li__dzNT+\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/operations';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport styles from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.list}>\n    {contacts.map((contact) => (\n      <li className={styles.li} key={contact.id}>\n        {contact.name}: {contact.phone}\n        <button onClick={() => dispatch(deleteContacts(contact.id))}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n  );\n}\n\nexport default ContactList;\n\n\n\n  // const contacts = useSelector(selectFilteredContacts);","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport styles from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input className={styles.input} type=\"text\" placeholder=\"Filter by name\" value={filter} onChange={handleChange} />\n    </label>\n  );\n}\n\nexport default Filter;\n\n\n\n","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { getError, getIsLoading } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError); \n\n  return (\n    <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList />\n      </div>\n  );\n};\n\nexport default ContactsPage;\n\n\n\n\n\n\n\n\n\n// import { Loader } from 'components/Loader/Loader';\n// import React, { useEffect } from 'react';\n// import { Helmet } from 'react-helmet';\n// import { useDispatch, useSelector } from 'react-redux';\n// import imgFavicon from '../images/favicon-32x32.png';\n// import {\n//   addContact,\n//   deleteContact,\n//   requestContacts,\n//   selectContacts,\n//   selectContactsError,\n//   selectContactsIsLoading,\n// } from 'redux/contactsReducer';\n\n// const ContactsPage = () => {\n//   const dispatch = useDispatch();\n//   const contacts = useSelector(selectContacts);\n//   const isLoading = useSelector(selectContactsIsLoading);\n//   const error = useSelector(selectContactsError);\n\n//   useEffect(() => {\n//     dispatch(requestContacts());\n//   }, [dispatch]);\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n\n//     const name = event.currentTarget.elements.contactName.value;\n//     const number = event.currentTarget.elements.contactNumber.value;\n\n//     const formData = {\n//       name,\n//       number,\n//     };\n\n//     dispatch(addContact(formData));\n//     event.currentTarget.reset();\n//   };\n\n//   const handleDeleteContact = contactId => {\n//     dispatch(deleteContact(contactId));\n//   };\n\n//   const showContacts = Array.isArray(contacts) && contacts.length > 0;\n//   return (\n//     <div>\n//       <Helmet>\n//         <meta charSet=\"utf-8\" />\n//         <link rel=\"icon\" type=\"image/x-icon\" href={imgFavicon}></link>\n//         <title>Contacts</title>\n//       </Helmet>\n//       <h1>Phonebook</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           <p>Name:</p>\n//           <input type=\"text\" name=\"contactName\" required minLength={2} />\n//         </label>\n//         <label>\n//           <p>Number:</p>\n//           <input type=\"text\" name=\"contactNumber\" required minLength={6} />\n//         </label>\n//         <div>\n//           <button type=\"submit\">Add contact</button>\n//         </div>\n//       </form>\n//       {error !== null && (\n//         <p className=\"c-error\">\n//           Oops, some error occured. Please, try again later. Error: {error}\n//         </p>\n//       )}\n//       {isLoading && <Loader />}\n//       <ul>\n//         {showContacts &&\n//           contacts.map(({ id, name, number }) => (\n//             <li key={id}>\n//               <h3>\n//                 Name: {name}{' '}\n//                 <button onClick={() => handleDeleteContact(id)}>&times;</button>\n//               </h3>\n//               <p>\n//                 Phone number: <b>{number}</b>\n//               </p>\n//             </li>\n//           ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ContactsPage;"],"names":["dispatch","useDispatch","useState","name","phone","contact","setContact","handleChange","e","target","value","className","styles","onSubmit","preventDefault","addContacts","type","placeholder","onChange","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","getIsLoading","state","contacts","isLoading","getError","error","selectVisibleContacts","items","filter","toLowerCase","includes","selectFilter","auth","user","email","createAction","useSelector","onClick","deleteContacts","id","setFilter"],"sourceRoot":""}