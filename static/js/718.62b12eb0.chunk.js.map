{"version":3,"file":"static/js/718.62b12eb0.chunk.js","mappings":"0OACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAgI,4B,mBCwDhI,EApDoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,CACrCC,KAAM,GACNC,MAAO,KAFT,eAAOC,EAAP,KAAgBC,EAAhB,KAKMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACdJ,GAAW,kBACND,GADK,cAEPF,EAAOO,IAEX,EAWD,OACE,kBAAMC,UAAWC,EAAaC,SAVX,SAACL,GACpBA,EAAEM,iBACFd,GAASe,EAAAA,EAAAA,IAAYV,IACrBC,EAAW,CACTH,KAAM,GACNC,MAAO,IAEV,EAGC,WACE,mBAAOO,UAAWC,EAAlB,UAAgC,QAEhC,kBAAOD,UAAWC,EAChBI,KAAK,OACLb,KAAK,OACLc,YAAY,OACZP,MAAOL,EAAQF,KACfe,SAAUX,QAGZ,mBAAOI,UAAWC,EAAlB,UAAgC,UAEhC,kBAAOD,UAAWC,EAChBI,KAAK,OACLb,KAAK,QACLc,YAAY,QACZP,MAAOL,EAAQD,MACfc,SAAUX,QAGZ,mBAASI,UAAWC,EAAeI,KAAK,SAAxC,SAAiD,kBAItD,ECtDD,EAAuB,0BAAvB,EAAsD,wB,UCKzCG,EAAe,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EACpBC,EAAW,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EAEhBC,GAAwBC,EAAAA,EAAAA,IACnC,CANyB,SAAAN,GAAK,OAAIA,EAAMC,SAASM,KAAnB,EACP,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,IAM5B,SAACP,EAAUO,GACT,OAAOP,EAASO,QAAO,SAACvB,GAAD,OACrBA,EAAQF,KAAK0B,cAAcC,SAASF,EAAOC,cADtB,GAGxB,IAGUE,EAAe,SAACX,GAAD,OAAWA,EAAMQ,MAAjB,ECM5B,MAlBA,WACE,IAAMP,GAAWW,EAAAA,EAAAA,IAAYP,GACvBzB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIU,UAAWC,EAAf,SACCS,EAASY,KAAI,SAAC5B,GAAD,OACZ,gBAAIM,UAAWC,EAAf,UACGP,EAAQF,KAAK,KAAGE,EAAQD,OACzB,mBAAQ8B,QAAS,kBAAMlC,GAASmC,EAAAA,EAAAA,IAAe9B,EAAQ+B,IAAtC,EAAjB,SAA6D,aAFhC/B,EAAQ+B,GAD3B,KAUjB,ECrBD,EAAwB,sBAAxB,EAAsD,sB,UCqBtD,MAhBA,WACE,IAAMR,GAASI,EAAAA,EAAAA,IAAYD,GACrB/B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,mBAAOU,UAAWC,EAAlB,UAAgC,yBAE9B,kBAAOD,UAAWC,EAAcI,KAAK,OAAOC,YAAY,iBAAiBP,MAAOkB,EAAQV,SAPvE,SAACV,GACpBR,GAASqC,EAAAA,EAAAA,GAAU7B,EAAEC,OAAOC,OAC7B,MAQF,ECGD,EAhBqB,WACnB,IAAMY,GAAYU,EAAAA,EAAAA,IAAYb,GACxBK,GAAQQ,EAAAA,EAAAA,IAAYT,GAE1B,OACE,4BACI,wBAAI,eACJ,SAAC,EAAD,KACA,wBAAI,cACJ,SAAC,EAAD,IACCD,IAAcE,IAAS,uBAAG,4BAC3B,SAAC,EAAD,MAGP,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"error\":\"ContactForm_error__C1smZ\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { addContacts } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [contact, setContact] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setContact({\n      ...contact,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContacts(contact));\n    setContact({\n      name: '',\n      phone: '',\n    });\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n      <input className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        value={contact.name}\n        onChange={handleChange}\n      />\n      </label>\n      <label className={styles.label}>\n        Number\n      <input className={styles.input}\n        type=\"text\"\n        name=\"phone\"\n        placeholder=\"Phone\"\n        value={contact.phone}\n        onChange={handleChange}\n      />\n      </label>\n      <button  className={styles.button} type=\"submit\">Add contact</button>\n      {/* {error && <p className={styles.error}>{error}</p>} */}\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n\n\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import styles from './ContactForm.module.css';\n// import { addContacts } from 'redux/operations';\n// import { getContacts } from 'redux/selectors';\n\n// function ContactForm() {\n//   const dispatch = useDispatch();\n//   const allContacts = useSelector(getContacts);\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     if (!name || !number) {\n//       setError('Please fill in both name and number.');\n//       return;\n//     }\n\n//     const isContactExists = allContacts.some(\n//       (contact) => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number\n//     );\n\n//     if (isContactExists) {\n//       setError('This contact already exists.');\n\n//       return;\n//     }\n//     try {\n//       await dispatch(addContacts({ name, number }));\n//       setName('');\n//       setNumber('');\n//       setError('');\n//     } catch (error) {\n//       setError('An error occurred while adding the contact.');\n//     }\n//   };\n\n//   return (\n//     <form className={styles.form} onSubmit={handleSubmit}>\n//       <label className={styles.label}>\n//         Name\n//         <input\n//           className={styles.input}\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//       </label>\n//       <label className={styles.label}>\n//         Number\n//         <input\n//           className={styles.input}\n//           type=\"tel\"\n//           value={number}\n//           onChange={(e) => setNumber(e.target.value)}\n//           pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n//       </label>\n//       <button  className={styles.button} type=\"submit\">Add contact</button>\n//       {error && <p className={styles.error}>{error}</p>}\n//     </form>\n//   );\n// }\n\n// export default ContactForm;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"li\":\"ContactList_li__dzNT+\"};","import { createSelector } from \"@reduxjs/toolkit\";\n// import { useSelector } from \"react-redux\";\n// import { selectUser, selectIsLoggedIn, selectIsRefreshing } from 'redux/selectors';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectFilter = (state) => state.filter;\n\n\n\n\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nfunction ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.list}>\n    {contacts.map((contact) => (\n      <li className={styles.li} key={contact.id}>\n        {contact.name}: {contact.phone}\n        <button onClick={() => dispatch(deleteContacts(contact.id))}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n  );\n}\n\nexport default ContactList;\n\n\n\n  // const contacts = useSelector(selectFilteredContacts);","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nfunction Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input className={styles.input} type=\"text\" placeholder=\"Filter by name\" value={filter} onChange={handleChange} />\n    </label>\n  );\n}\n\nexport default Filter;\n\n\n\n","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError); \n\n  return (\n    <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList />\n      </div>\n  );\n};\n\nexport default ContactsPage;\n\n\n\n\n\n\n\n\n\n// import { Loader } from 'components/Loader/Loader';\n// import React, { useEffect } from 'react';\n// import { Helmet } from 'react-helmet';\n// import { useDispatch, useSelector } from 'react-redux';\n// import imgFavicon from '../images/favicon-32x32.png';\n// import {\n//   addContact,\n//   deleteContact,\n//   requestContacts,\n//   selectContacts,\n//   selectContactsError,\n//   selectContactsIsLoading,\n// } from 'redux/contactsReducer';\n\n// const ContactsPage = () => {\n//   const dispatch = useDispatch();\n//   const contacts = useSelector(selectContacts);\n//   const isLoading = useSelector(selectContactsIsLoading);\n//   const error = useSelector(selectContactsError);\n\n//   useEffect(() => {\n//     dispatch(requestContacts());\n//   }, [dispatch]);\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n\n//     const name = event.currentTarget.elements.contactName.value;\n//     const number = event.currentTarget.elements.contactNumber.value;\n\n//     const formData = {\n//       name,\n//       number,\n//     };\n\n//     dispatch(addContact(formData));\n//     event.currentTarget.reset();\n//   };\n\n//   const handleDeleteContact = contactId => {\n//     dispatch(deleteContact(contactId));\n//   };\n\n//   const showContacts = Array.isArray(contacts) && contacts.length > 0;\n//   return (\n//     <div>\n//       <Helmet>\n//         <meta charSet=\"utf-8\" />\n//         <link rel=\"icon\" type=\"image/x-icon\" href={imgFavicon}></link>\n//         <title>Contacts</title>\n//       </Helmet>\n//       <h1>Phonebook</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           <p>Name:</p>\n//           <input type=\"text\" name=\"contactName\" required minLength={2} />\n//         </label>\n//         <label>\n//           <p>Number:</p>\n//           <input type=\"text\" name=\"contactNumber\" required minLength={6} />\n//         </label>\n//         <div>\n//           <button type=\"submit\">Add contact</button>\n//         </div>\n//       </form>\n//       {error !== null && (\n//         <p className=\"c-error\">\n//           Oops, some error occured. Please, try again later. Error: {error}\n//         </p>\n//       )}\n//       {isLoading && <Loader />}\n//       <ul>\n//         {showContacts &&\n//           contacts.map(({ id, name, number }) => (\n//             <li key={id}>\n//               <h3>\n//                 Name: {name}{' '}\n//                 <button onClick={() => handleDeleteContact(id)}>&times;</button>\n//               </h3>\n//               <p>\n//                 Phone number: <b>{number}</b>\n//               </p>\n//             </li>\n//           ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ContactsPage;"],"names":["dispatch","useDispatch","useState","name","phone","contact","setContact","handleChange","e","target","value","className","styles","onSubmit","preventDefault","addContacts","type","placeholder","onChange","getIsLoading","state","contacts","isLoading","getError","error","selectVisibleContacts","createSelector","items","filter","toLowerCase","includes","selectFilter","useSelector","map","onClick","deleteContacts","id","setFilter"],"sourceRoot":""}